<template>
  <div class="doc-page">
    <div class="ctx">
      <canvas class="myClock" id="myClock"></canvas>
    </div>
  </div>
</template>

<style>
  .ctx {
     display: flex;
     justify-content: center;
     align-items: center;
     flex-direction: column;
     align-items: center;
     width: 100%;
     background-color: rgb(198, 196, 172);
     border-radius: 15px;
     padding: 10px;
 }
  .myClock {
    height: 500px;
    width: 500px;
    border-radius: 80%;
    background-color: rgb(206, 200, 92);
    border: 1px solid rgb(0, 0, 0);
  }
</style>

<script>
  export default {
    private: {
      flag: false,
      wid:500,
      h:500,
      ctx:null,
      canvas:null,
      timer:null
    },
    onInit() {
      this.$page.setTitleBar({
        text: 'YkxClock'
      })
    },
    onShow() {
      
      if (!this.flag) {
        this.drawMyClock()
      }
    },
    onDestroy() {
    if (this.timer != null)
      clearInterval(this.timer)
  },
    drawMyClock() {
        this.canvas = this.$element('myClock') 
        this.ctx = this.canvas.getContext('2d') 
        this.ctx.translate(250,250)
        this.flag = true
        this.showMyClock()
    },
    showMyClock() {
            this.ctx.clearRect((-this.wid) / 2, (-this.h )/ 2, this.wid, this.h)
            var len = this.wid / 2;
            var tlen = len * 0.85;
            this.ctx.font = "32px 'Arial'";
            this.ctx.fillStyle = "black";
            this.ctx.textAlign = "center";
            this.ctx.textBaseLine = "middle";
            
            const twoPi = Math.PI * 2;
            const totalTags = 12;

            for (var i = 0; i < totalTags; i++) {
                var angle = twoPi * (3 - i) / totalTags;
                var x = tlen * Math.cos(angle);
                var y = -tlen * Math.sin(angle);
                this.ctx.fillText(i, x, y);
            }


            var date = new Date();
            var hour = date.getHours();
            var min = date.getMinutes();
            var sec = date.getSeconds();
            hour = (hour > 12) ? hour - 12 : hour;
 
            //时针
            var hourAng = Math.PI * 2 * (3 - (hour + min / 60)) / 12;
            var hourLen = len * 0.5;
            this.showClockHand(hourAng, hourLen, 15, "#000000");
 
            //分针
            var minAng = Math.PI * 2 * (15 - (min + sec / 60)) / 60;
            var minLen = len * 0.7;
            this.showClockHand(minAng, minLen, 10, "#000000");
 
            //秒针
            var secAng = Math.PI * 2 * (15 - sec) / 60;
            var secLen = len * 0.8;
            this.showClockHand(secAng, secLen, 3, "#aa0000");
 
            this.timer=setInterval(()=>{
                 this.showMyClock()
               },1000) //每1000ms刷新一次
        },

        showClockHand(angle, len, width, color) {
            
            var x = len * Math.cos(angle);
            var y = -len * Math.sin(angle);
            
            this.ctx.strokeStyle = color;
            this.ctx.lineWidth = width;
            this.ctx.lineCap = "round";
            
            this.ctx.beginPath();
            this.ctx.moveTo(0, 0);
            this.ctx.lineTo(x, y);
            this.ctx.stroke();
            this.flag = true;
        }

  }
</script>